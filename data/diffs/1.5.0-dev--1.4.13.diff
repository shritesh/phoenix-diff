diff --git assets/css/app.css assets/css/app.css
index 2ee9004..fec0b3f 100644
--- assets/css/app.css
+++ assets/css/app.css
@@ -1,36 +1,3 @@
 /* This file is for your main application css. */
-@import "./phoenix.css";
 
-/* Alerts and form errors */
-.alert {
-  padding: 15px;
-  margin-bottom: 20px;
-  border: 1px solid transparent;
-  border-radius: 4px;
-}
-.alert-info {
-  color: #31708f;
-  background-color: #d9edf7;
-  border-color: #bce8f1;
-}
-.alert-warning {
-  color: #8a6d3b;
-  background-color: #fcf8e3;
-  border-color: #faebcc;
-}
-.alert-danger {
-  color: #a94442;
-  background-color: #f2dede;
-  border-color: #ebccd1;
-}
-.alert p {
-  margin-bottom: 0;
-}
-.alert:empty {
-  display: none;
-}
-.help-block {
-  color: #a94442;
-  display: block;
-  margin: -1rem 0 2rem;
-}
+@import "./phoenix.css";
diff --git assets/css/phoenix.css assets/css/phoenix.css
index 3767b31..e1ca940 100644
--- assets/css/phoenix.css
+++ assets/css/phoenix.css
@@ -15,7 +15,6 @@ h3{font-size: 2.2rem; letter-spacing: -.08rem; line-height: 1.35}
 h4{font-size: 1.8rem; letter-spacing: -.05rem; line-height: 1.5}
 h5{font-size: 1.6rem; letter-spacing: 0; line-height: 1.4}
 h6{font-size: 1.4rem; letter-spacing: 0; line-height: 1.2}
-pre{padding: 1em;}
 
 .container{
   margin: 0 auto;
@@ -28,19 +27,53 @@ select {
   width: auto;
 }
 
+/* Alerts and form errors */
+.alert {
+  padding: 15px;
+  margin-bottom: 20px;
+  border: 1px solid transparent;
+  border-radius: 4px;
+}
+.alert-info {
+  color: #31708f;
+  background-color: #d9edf7;
+  border-color: #bce8f1;
+}
+.alert-warning {
+  color: #8a6d3b;
+  background-color: #fcf8e3;
+  border-color: #faebcc;
+}
+.alert-danger {
+  color: #a94442;
+  background-color: #f2dede;
+  border-color: #ebccd1;
+}
+.alert p {
+  margin-bottom: 0;
+}
+.alert:empty {
+  display: none;
+}
+.help-block {
+  color: #a94442;
+  display: block;
+  margin: -1rem 0 2rem;
+}
+
 /* Phoenix promo and logo */
 .phx-hero {
   text-align: center;
   border-bottom: 1px solid #e3e3e3;
   background: #eee;
   border-radius: 6px;
-  padding: 3em 3em 1em;
+  padding: 3em;
   margin-bottom: 3rem;
   font-weight: 200;
   font-size: 120%;
 }
-.phx-hero input {
-  background: #ffffff;
+.phx-hero p {
+  margin: 0;
 }
 .phx-logo {
   min-width: 300px;
diff --git assets/js/app.js assets/js/app.js
index f1e5c60..8a5d386 100644
--- assets/js/app.js
+++ assets/js/app.js
@@ -1,15 +1,17 @@
 // We need to import the CSS so that webpack will load it.
 // The MiniCssExtractPlugin is used to separate it out into
 // its own CSS file.
-import "../css/app.css"
+import css from "../css/app.css"
 
 // webpack automatically bundles all modules in your
 // entry points. Those entry points can be configured
 // in "webpack.config.js".
 //
-// Import deps with the dep name or local files with a relative path, for example:
+// Import dependencies
 //
-//     import {Socket} from "phoenix"
-//     import socket from "./socket"
+import "phoenix_html"
+
+// Import local files
 //
-import "phoenix_html"
\ No newline at end of file
+// Local files can be imported directly using relative paths, for example:
+// import socket from "./socket"
diff --git assets/package.json assets/package.json
index 7ce647b..cd2bb9a 100644
--- assets/package.json
+++ assets/package.json
@@ -1,6 +1,5 @@
 {
   "repository": {},
-  "description": " ",
   "license": "MIT",
   "scripts": {
     "deploy": "webpack --mode production",
diff --git assets/webpack.config.js assets/webpack.config.js
index 68b77cb..4569a84 100644
--- assets/webpack.config.js
+++ assets/webpack.config.js
@@ -4,12 +4,11 @@ const MiniCssExtractPlugin = require('mini-css-extract-plugin');
 const TerserPlugin = require('terser-webpack-plugin');
 const OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin');
 const CopyWebpackPlugin = require('copy-webpack-plugin');
-const devMode = process.env.NODE_ENV !== 'production'
 
 module.exports = (env, options) => ({
   optimization: {
     minimizer: [
-      new TerserPlugin({ cache: true, parallel: true, sourceMap: devMode }),
+      new TerserPlugin({ cache: true, parallel: true, sourceMap: false }),
       new OptimizeCSSAssetsPlugin({})
     ]
   },
@@ -20,7 +19,6 @@ module.exports = (env, options) => ({
     filename: 'app.js',
     path: path.resolve(__dirname, '../priv/static/js')
   },
-  devtool: devMode ? 'source-map' : undefined,
   module: {
     rules: [
       {
@@ -32,15 +30,7 @@ module.exports = (env, options) => ({
       },
       {
         test: /\.css$/,
-        use: [
-          MiniCssExtractPlugin.loader,
-          {
-            loader: 'css-loader',
-            options: {
-              sourceMap: devMode
-            }
-          }
-        ]
+        use: [MiniCssExtractPlugin.loader, 'css-loader']
       }
     ]
   },
diff --git config/config.exs config/config.exs
index 8ada87a..c92ac23 100644
--- config/config.exs
+++ config/config.exs
@@ -14,9 +14,9 @@ config :sample_app,
 config :sample_app, SampleAppWeb.Endpoint,
   url: [host: "localhost"],
   secret_key_base: "aaaaaaaa",
-  render_errors: [view: SampleAppWeb.ErrorView, accepts: ~w(html json), layout: false],
-  pubsub_server: SampleApp.PubSub,
-  live_view: [signing_salt: "aaaaaaaa"]
+  render_errors: [view: SampleAppWeb.ErrorView, accepts: ~w(html json)],
+  pubsub: [name: SampleApp.PubSub, adapter: Phoenix.PubSub.PG2],
+  live_view: [signing_salt: "9wNu5IEE"]
 
 # Configures Elixir's Logger
 config :logger, :console,
diff --git config/test.exs config/test.exs
index 507b703..31fdfee 100644
--- config/test.exs
+++ config/test.exs
@@ -1,14 +1,10 @@
 use Mix.Config
 
 # Configure your database
-#
-# The MIX_TEST_PARTITION environment variable can be used
-# to provide built-in test partitioning in CI environment.
-# Run `mix help test` for more information.
 config :sample_app, SampleApp.Repo,
   username: "postgres",
   password: "postgres",
-  database: "sample_app_test#{System.get_env("MIX_TEST_PARTITION")}",
+  database: "sample_app_test",
   hostname: "localhost",
   pool: Ecto.Adapters.SQL.Sandbox
 
diff --git lib/sample_app/application.ex lib/sample_app/application.ex
index 84e1f18..f9584e1 100644
--- lib/sample_app/application.ex
+++ lib/sample_app/application.ex
@@ -6,15 +6,14 @@ defmodule SampleApp.Application do
   use Application
 
   def start(_type, _args) do
+    # List all child processes to be supervised
     children = [
       # Start the Ecto repository
       SampleApp.Repo,
-      # Start the PubSub system
-      {Phoenix.PubSub, name: SampleApp.PubSub},
-      # Start the Endpoint (http/https)
+      # Start the endpoint when the application starts
       SampleAppWeb.Endpoint
-      # Start a worker by calling: SampleApp.Worker.start_link(arg)
-      # {SampleApp.Worker, arg}
+      # Starts a worker by calling: SampleApp.Worker.start_link(arg)
+      # {SampleApp.Worker, arg},
     ]
 
     # See https://hexdocs.pm/elixir/Supervisor.html
diff --git lib/sample_app_web/endpoint.ex lib/sample_app_web/endpoint.ex
index 285d1c9..fa783dc 100644
--- lib/sample_app_web/endpoint.ex
+++ lib/sample_app_web/endpoint.ex
@@ -30,7 +30,6 @@ defmodule SampleAppWeb.Endpoint do
     socket "/phoenix/live_reload/socket", Phoenix.LiveReloader.Socket
     plug Phoenix.LiveReloader
     plug Phoenix.CodeReloader
-    plug Phoenix.Ecto.CheckRepoStatus, otp_app: :sample_app
   end
 
   plug Plug.RequestId
diff --git lib/sample_app_web/templates/layout/app.html.eex lib/sample_app_web/templates/layout/app.html.eex
index 2dfc524..30e612b 100644
--- lib/sample_app_web/templates/layout/app.html.eex
+++ lib/sample_app_web/templates/layout/app.html.eex
@@ -24,7 +24,7 @@
     <main role="main" class="container">
       <p class="alert alert-info" role="alert"><%= get_flash(@conn, :info) %></p>
       <p class="alert alert-danger" role="alert"><%= get_flash(@conn, :error) %></p>
-      <%= @inner_content %>
+      <%= render @view_module, @view_template, assigns %>
     </main>
     <script type="text/javascript" src="<%= Routes.static_path(@conn, "/js/app.js") %>"></script>
   </body>
diff --git lib/sample_app_web/templates/page/index.html.eex lib/sample_app_web/templates/page/index.html.eex
index 716caea..8cbd9d8 100644
--- lib/sample_app_web/templates/page/index.html.eex
+++ lib/sample_app_web/templates/page/index.html.eex
@@ -1,6 +1,6 @@
 <section class="phx-hero">
   <h1><%= gettext "Welcome to %{name}!", name: "Phoenix" %></h1>
-  <p>Peace-of-mind from prototype to production</p>
+  <p>A productive web framework that<br/>does not compromise speed or maintainability.</p>
 </section>
 
 <section class="row">
@@ -14,7 +14,7 @@
         <a href="https://github.com/phoenixframework/phoenix">Source</a>
       </li>
       <li>
-        <a href="https://github.com/phoenixframework/phoenix/blob/v1.5/CHANGELOG.md">v1.5 Changelog</a>
+        <a href="https://github.com/phoenixframework/phoenix/blob/v1.4/CHANGELOG.md">v1.4 Changelog</a>
       </li>
     </ul>
   </article>
@@ -30,9 +30,6 @@
       <li>
         <a href="https://twitter.com/elixirphoenix">Twitter @elixirphoenix</a>
       </li>
-      <li>
-        <a href="https://elixir-slackin.herokuapp.com/">Elixir on Slack</a>
-      </li>
     </ul>
   </article>
 </section>
diff --git lib/sample_app_web/views/error_helpers.ex lib/sample_app_web/views/error_helpers.ex
index 7bb8bdf..788d905 100644
--- lib/sample_app_web/views/error_helpers.ex
+++ lib/sample_app_web/views/error_helpers.ex
@@ -10,10 +10,7 @@ defmodule SampleAppWeb.ErrorHelpers do
   """
   def error_tag(form, field) do
     Enum.map(Keyword.get_values(form.errors, field), fn error ->
-      content_tag(:span, translate_error(error),
-        class: "help-block",
-        data: [phx_error_for: input_id(form, field)]
-      )
+      content_tag(:span, translate_error(error), class: "help-block")
     end)
   end
 
diff --git lib/sample_app_web.ex lib/sample_app_web.ex
index ec053d5..bf6f62a 100644
--- lib/sample_app_web.ex
+++ lib/sample_app_web.ex
@@ -36,15 +36,18 @@ defmodule SampleAppWeb do
       # Import convenience functions from controllers
       import Phoenix.Controller, only: [get_flash: 1, get_flash: 2, view_module: 1]
 
-      # Include shared imports and aliases for views
-      unquote(view_helpers())
+      # Use all HTML functionality (forms, tags, etc)
+      use Phoenix.HTML
+
+      import SampleAppWeb.ErrorHelpers
+      import SampleAppWeb.Gettext
+      alias SampleAppWeb.Router.Helpers, as: Routes
     end
   end
 
   def router do
     quote do
       use Phoenix.Router
-
       import Plug.Conn
       import Phoenix.Controller
     end
@@ -57,17 +60,6 @@ defmodule SampleAppWeb do
     end
   end
 
-  defp view_helpers do
-    quote do
-      # Use all HTML functionality (forms, tags, etc)
-      use Phoenix.HTML
-
-      import SampleAppWeb.ErrorHelpers
-      import SampleAppWeb.Gettext
-      alias SampleAppWeb.Router.Helpers, as: Routes
-    end
-  end
-
   @doc """
   When used, dispatch to the appropriate controller/view/etc.
   """
diff --git mix.exs mix.exs
index 7cac632..2fd82df 100644
--- mix.exs
+++ mix.exs
@@ -5,7 +5,7 @@ defmodule SampleApp.MixProject do
     [
       app: :sample_app,
       version: "0.1.0",
-      elixir: "~> 1.7",
+      elixir: "~> 1.5",
       elixirc_paths: elixirc_paths(Mix.env()),
       compilers: [:phoenix, :gettext] ++ Mix.compilers(),
       start_permanent: Mix.env() == :prod,
@@ -33,8 +33,9 @@ defmodule SampleApp.MixProject do
   # Type `mix help deps` for examples and options.
   defp deps do
     [
-      {:phoenix, github: "phoenixframework/phoenix", override: true},
-      {:phoenix_ecto, "~> 4.1"},
+      {:phoenix, "~> 1.4.13"},
+      {:phoenix_pubsub, "~> 1.1"},
+      {:phoenix_ecto, "~> 4.0"},
       {:ecto_sql, "~> 3.1"},
       {:postgrex, ">= 0.0.0"},
       {:phoenix_html, "~> 2.11"},
diff --git test/support/channel_case.ex test/support/channel_case.ex
index ebc27ed..1e12c94 100644
--- test/support/channel_case.ex
+++ test/support/channel_case.ex
@@ -20,7 +20,7 @@ defmodule SampleAppWeb.ChannelCase do
   using do
     quote do
       # Import conveniences for testing with channels
-      import Phoenix.ChannelTest
+      use Phoenix.ChannelTest
 
       # The default endpoint for testing
       @endpoint SampleAppWeb.Endpoint
diff --git test/support/conn_case.ex test/support/conn_case.ex
index ce970f6..f03645b 100644
--- test/support/conn_case.ex
+++ test/support/conn_case.ex
@@ -20,8 +20,7 @@ defmodule SampleAppWeb.ConnCase do
   using do
     quote do
       # Import conveniences for testing with connections
-      import Plug.Conn
-      import Phoenix.ConnTest
+      use Phoenix.ConnTest
       alias SampleAppWeb.Router.Helpers, as: Routes
 
       # The default endpoint for testing
